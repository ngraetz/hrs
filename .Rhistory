aes(x = age,
y = cognitive,
label = unique_ids_race_edu,
group = race_edu)) +
scale_color_manual(values = c('#3182bd','#9ecae1','#de2d26','#fc9272')) +
scale_fill_manual(values = c('#3182bd','#9ecae1','#de2d26','#fc9272')) +
theme_bw()
trends <- d2[, list(cognitive=mean(cognitive, na.rm=T)), by=c('age','race','edu_cat')]
trends <- trends[edu_cat %in% c('college','less_highschool')]
trends[, race_edu := paste0(race,'_',edu_cat)]
trends <- merge(trends, unique(d2[,c('race','edu_cat','unique_ids_race_edu')]), by=c('race','edu_cat'))
gg.race.edu <- ggplot(data=trends,
aes(x=age,
y=cognitive)) +
geom_line(aes(color=race_edu,
fill=race_edu),
size=2) +
geom_smooth(aes(color=race_edu,
fill=race_edu),
alpha=0.5) +
geom_label(data = trends[age==60, ],
aes(x = age,
y = cognitive,
label = unique_ids_race_edu,
group = race_edu)) +
scale_color_manual(values = c('#3182bd','#9ecae1','#de2d26','#fc9272')) +
scale_fill_manual(values = c('#3182bd','#9ecae1','#de2d26','#fc9272')) +
theme_bw()
gg.race.edu
## Try modelling with fixed effect on matched pairs.
formula3 <- as.formula(paste0(outcome_var, ' ~ matchvec_1 + ', paste(c(factor_vars), collapse=' + '), ' + baseline_cog + center_age*edu_years*race + (center_age||id_factor)'))
model3 <- lmer(formula3, weights=pweight, data=d2, REML=FALSE)
## Try modelling with fixed effect on matched pairs.
formula3 <- as.formula(paste0(outcome_var, ' ~ matchvec_1 + center_age*edu_years*race + (center_age||id_factor)'))
model3 <- lmer(formula3, weights=pweight, data=d2, REML=FALSE)
summary(model3)
formula1 <- as.formula(paste0(outcome_var, ' ~ ', paste(c(factor_vars), collapse=' + '), ' + center_age*baseline_cog*race + (center_age||id_factor)'))
model1 <- lmer(formula1, weights=pweight, data=model_hrs, REML=FALSE)
formula2 <- as.formula(paste0(outcome_var, ' ~ ', paste(c(factor_vars), collapse=' + '), ' + baseline_cog + center_age*edu_years*race + (center_age||id_factor)'))
model2 <- lmer(formula2, weights=pweight, data=model_hrs, REML=FALSE)
## Make model table
tab_model(list(model1,model2,model3), dv.labels = c('Model 1','Model 2','Matched'), show.ci=FALSE, p.style='asterisk', file='three_way_interaction.html')
getwd()
pdf('matched_pairs.pdf', width=10, height=8)
print(gg.love)
print(gg.race)
print(gg.race.edu)
dev.off()
## Make Love Plot
gg.love <- ggplot() +
geom_jitter(data=all.diffs,
aes(x=diff,
y=variable,
fill=matching),
width = 0.1,
height = 0.1,
size=5,
shape=21) +
geom_vline(xintercept = .2, linetype='dashed') +
geom_vline(xintercept = -.2, linetype='dashed') +
geom_vline(xintercept = 0) +
labs(y='',x='Standardized difference',
title='Love plot of standardized differences for all confounders\nMatching via rank-based Mahalanobis distance with a propensity score caliper', fill='') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
gg.love
pdf('matched_pairs.pdf', width=12, height=8)
print(gg.love)
print(gg.race)
print(gg.race.edu)
dev.off()
?addcaliper
addcaliper
100*e^2
100*exp(0.02)
100*exp(0.12)
100*exp(0.12*5)
100*exp(0.12*10)
868.34*exp(0.12*3)
868.34*exp(0.12*4)
868.34*exp(0.12*5)
868.34*exp(0.12*6)
868.34*exp(0.12*7)
grepl('abc*', 'xxxabc')
grepl('abc*def', 'abc')
grepl('abc*def', 'abcdef')
grepl('abc*def', 'abcxxxxxdef')
grepl('abc*def', 'abcabcdef')
library(ggplot2)
library(data.table)
library(grid)
library(gridExtra)
repo <- 'C:/Users/ngraetz/Documents/repos/rwjf_counties/'
cov_dir <- paste0(repo, 'covariate_clean_data/')
smoking <- "C:/Users/ngraetz/Documents/repos/rwjf_counties/covariate_raw/ihme/IHME_US_COUNTY_TOTAL_AND_DAILY_SMOKING_PREVALENCE_1996_2012/IHME_US_COUNTY_TOTAL_AND_DAILY_SMOKING_PREVALENCE_1996_2012.csv"
alcohol <- "C:/Users/ngraetz/Documents/repos/rwjf_counties/covariate_raw/ihme/IHME_USA_COUNTY_ALCOHOL_USE_PREVALENCE_2002_2012_NATIONAL/heavy_prop_IHME_USA_COUNTY_ALCOHOL_USE_PREVALENCE_2002_2012_NATIONAL_Y2015M04D23.csv"
diabetes <- "C:/Users/ngraetz/Documents/repos/rwjf_counties/covariate_raw/ihme/IHME_USA_COUNTY_DIABETES_PREVALENCE_1999_2012/age_standardized_prev_IHME_USA_COUNTY_DIABETES_PREVALENCE_1999_2012_NATIONAL_Y2016M08D23.csv"
pa_obesity <- "C:/Users/ngraetz/Documents/repos/rwjf_counties/covariate_raw/ihme/IHME_USA_OBESITY_PHYSICAL_ACTIVITY_2001_2011 (1).csv"
## Read and format to the same shape.
smoking <- fread(smoking)
setnames(smoking, c('total_mean','sex'), c('current_smoker_prev','sex_name'))
smoking[sex_name=='Males', sex := 1]
smoking[sex_name=='Females', sex := 2]
smoking <- smoking[!is.na(sex), c('state','county','current_smoker_prev','year','sex')]
alcohol <- fread(alcohol)
alcohol[, county := Location]
alcohol <- melt(alcohol, id.vars = c('county','State'), measure.vars = c(paste0(2005:2012, ' Females'), paste0(2005:2012, ' Males')))
alcohol[, c("year","sex_name") := tstrsplit(variable, " ", fixed=TRUE)]
alcohol[, year := as.numeric(year)]
setnames(alcohol, c('State','value'), c('state','as_heavy_drinking_prev'))
alcohol[sex_name=='Males', sex := 1]
alcohol[sex_name=='Females', sex := 2]
alcohol <- alcohol[!is.na(sex), c('state','county','as_heavy_drinking_prev','year','sex')]
diabetes <- fread(diabetes, skip = 1)
diabetes[, fips := as.character(FIPS)]
diabetes[nchar(fips)==4, fips := paste0('0',fips)]
diabetes[, county := Location]
diabetes <- melt(diabetes, id.vars = c('county','fips'), names(diabetes)[grep('Prevalence',names(diabetes))])
diabetes[, variable := as.character(variable)]
diabetes[, c("measure","year","sex_name") := tstrsplit(variable, ", ", fixed=TRUE)]
diabetes[, year := as.numeric(year)]
setnames(diabetes, 'value', 'as_diabetes_prev')
diabetes[sex_name=='Males', sex := 1]
diabetes[sex_name=='Females', sex := 2]
diabetes <- diabetes[!is.na(sex), c('county','fips','as_diabetes_prev','year','sex')]
pa_obesity <- fread(pa_obesity)
pa_obesity[, fips := as.character(fips)]
pa_obesity[nchar(fips)==4, fips := paste0('0',fips)]
pa_obesity <- melt(pa_obesity, id.vars = c('fips','Sex','Outcome','State'), measure.vars = c("Prevalence 2001 (%)","Prevalence 2002 (%)","Prevalence 2003 (%)","Prevalence 2004 (%)",
"Prevalence 2005 (%)","Prevalence 2006 (%)","Prevalence 2007 (%)","Prevalence 2008 (%)",
"Prevalence 2009 (%)","Prevalence 2010 (%)","Prevalence 2011 (%)"))
pa_obesity[, c("measure","year","trash") := tstrsplit(variable, " ", fixed=TRUE)]
pa_obesity[, year := as.numeric(year)]
pa_obesity <- dcast(pa_obesity, fips + Sex + year + State ~ Outcome, value.var = 'value')
pa_obesity[Sex=='Male', sex := 1]
pa_obesity[Sex=='Female', sex := 2]
setnames(pa_obesity, c('State','Any PA','Obesity','Sufficient PA'), c('state','pa_prev','obesity_prev','sufficient_pa_prev'))
pa_obesity <- pa_obesity[!is.na(sex), c('state','fips','pa_prev','obesity_prev','sufficient_pa_prev','year','sex')]
## Merge all together using fips/county from diabetes as anchor.
template <- as.data.table(expand.grid(2000:2015, 1:2, unique(diabetes[!is.na(fips), fips])))
setnames(template, c('year','sex','fips'))
template[, fips := as.character(fips)]
template[nchar(fips)==4, fips := paste0('0',fips)]
all <- merge(template, diabetes, by=c('fips','year','sex'), all.x=TRUE)
all <- merge(all, pa_obesity, by=c('fips','year','sex'), all.x=TRUE)
all <- merge(all, alcohol, by=c('state','county','year','sex'), all.x=TRUE)
all <- merge(all, smoking, by=c('state','county','year','sex'), all.x=TRUE)
all[, state := NULL]
all[, county := NULL]
head(all)
tail(all)
## Merge CHR variables to compare
chr <- fread("C:/Users/ngraetz/Documents/repos/rwjf_counties/covariate_clean_data/chr_covs.csv")
head(chr)
all <- merge(all, chr, all.x=TRUE, by=c('fips','year'))
class(chr[, fips])
table(chr[, nchar(fips)])
## Merge CHR variables to compare
chr <- fread("C:/Users/ngraetz/Documents/repos/rwjf_counties/covariate_clean_data/chr_covs.csv")
chr[, fips := as.character(fips)]
chr[nchar(fips)==4, fips := paste0('0',fips)]
all <- merge(all, chr, all.x=TRUE, by=c('fips','year'))
cols = c('as_diabetes_prev','pa_prev','obesity_prev','as_heavy_drinking_prev','current_smoker_prev',"chr_obesity_prev","chr_mammography","chr_diabetes_monitoring")
anscols = paste("lag", cols, sep="_")
all <- all[order(year)]
all[order(year), (anscols) := data.table::shift(.SD, 1, type="lag"), .SDcols=cols, by=c('fips','sex')]
for(v in cols) all[, paste0('r_',(v)) := log(get(v)/get(paste0('lag_',v)))]
magr <- all[, lapply(.SD, mean, na.rm=TRUE), by=c('fips','sex'), .SDcols=paste0('r_',cols)]
setnames(magr, paste0('r_',cols), paste0('magr_',cols))
all <- merge(all, magr, by=c('fips','sex'))
proj_cov <- function(x, magr) {
if(length(x[!(is.na(x))])==0) {
return(as.numeric(rep(NA,16)))
}
if(length(x[!(is.na(x))])!=0) {
temp <- data.table(year=2000:2015, cov=x, magr=magr)
## Get year range of this variable.
min_y <- min(temp[!is.na(cov), year])
max_y <- max(temp[!is.na(cov), year])
## Interpolate backwards.
if(min_y != 2000) {
for(y in rev(2000:(min_y-1))) {
temp[, trend := data.table::shift(cov, type='lead')]
temp[year==y, cov := trend / exp(magr)]
}
}
## Interpolate forwards.
if(max_y != 2015) {
for(y in (max_y+1):2015) {
temp[, trend := data.table::shift(cov, type='lag')]
temp[year==y, cov := trend * exp(magr)]
}
}
## Return just the interpolated covariate trend to assign to the new column.
return(temp[, cov])
}
}
all_melt <- melt(all, id.vars = c('fips','year','sex',c(paste0('magr_',cols))), measure.vars = cols, value.name = 'value')
all_melt <- melt(all_melt, id.vars = c('fips','year','sex','variable','value'), measure.vars = c(paste0('magr_',cols)), value.name = 'magr')
all_melt[, variable.1 := gsub('magr_','',variable.1)]
all_melt <- all_melt[variable==variable.1, ]
all_melt[, variable.1 := NULL]
all_melt[order(year), int_value := proj_cov(value, magr), by=c('fips','sex','variable')]
library(ggplot2)
library(data.table)
library(grid)
library(gridExtra)
repo <- 'C:/Users/ngraetz/Documents/repos/rwjf_counties/'
cov_dir <- paste0(repo, 'covariate_clean_data/')
smoking <- "C:/Users/ngraetz/Documents/repos/rwjf_counties/covariate_raw/ihme/IHME_US_COUNTY_TOTAL_AND_DAILY_SMOKING_PREVALENCE_1996_2012/IHME_US_COUNTY_TOTAL_AND_DAILY_SMOKING_PREVALENCE_1996_2012.csv"
alcohol <- "C:/Users/ngraetz/Documents/repos/rwjf_counties/covariate_raw/ihme/IHME_USA_COUNTY_ALCOHOL_USE_PREVALENCE_2002_2012_NATIONAL/heavy_prop_IHME_USA_COUNTY_ALCOHOL_USE_PREVALENCE_2002_2012_NATIONAL_Y2015M04D23.csv"
diabetes <- "C:/Users/ngraetz/Documents/repos/rwjf_counties/covariate_raw/ihme/IHME_USA_COUNTY_DIABETES_PREVALENCE_1999_2012/age_standardized_prev_IHME_USA_COUNTY_DIABETES_PREVALENCE_1999_2012_NATIONAL_Y2016M08D23.csv"
pa_obesity <- "C:/Users/ngraetz/Documents/repos/rwjf_counties/covariate_raw/ihme/IHME_USA_OBESITY_PHYSICAL_ACTIVITY_2001_2011 (1).csv"
## Read and format to the same shape.
smoking <- fread(smoking)
setnames(smoking, c('total_mean','sex'), c('current_smoker_prev','sex_name'))
smoking[sex_name=='Males', sex := 1]
smoking[sex_name=='Females', sex := 2]
smoking <- smoking[!is.na(sex), c('state','county','current_smoker_prev','year','sex')]
alcohol <- fread(alcohol)
alcohol[, county := Location]
alcohol <- melt(alcohol, id.vars = c('county','State'), measure.vars = c(paste0(2005:2012, ' Females'), paste0(2005:2012, ' Males')))
alcohol[, c("year","sex_name") := tstrsplit(variable, " ", fixed=TRUE)]
alcohol[, year := as.numeric(year)]
setnames(alcohol, c('State','value'), c('state','as_heavy_drinking_prev'))
alcohol[sex_name=='Males', sex := 1]
alcohol[sex_name=='Females', sex := 2]
alcohol <- alcohol[!is.na(sex), c('state','county','as_heavy_drinking_prev','year','sex')]
diabetes <- fread(diabetes, skip = 1)
diabetes[, fips := as.character(FIPS)]
diabetes[nchar(fips)==4, fips := paste0('0',fips)]
diabetes[, county := Location]
diabetes <- melt(diabetes, id.vars = c('county','fips'), names(diabetes)[grep('Prevalence',names(diabetes))])
diabetes[, variable := as.character(variable)]
diabetes[, c("measure","year","sex_name") := tstrsplit(variable, ", ", fixed=TRUE)]
diabetes[, year := as.numeric(year)]
setnames(diabetes, 'value', 'as_diabetes_prev')
diabetes[sex_name=='Males', sex := 1]
diabetes[sex_name=='Females', sex := 2]
diabetes <- diabetes[!is.na(sex), c('county','fips','as_diabetes_prev','year','sex')]
pa_obesity <- fread(pa_obesity)
pa_obesity[, fips := as.character(fips)]
pa_obesity[nchar(fips)==4, fips := paste0('0',fips)]
pa_obesity <- melt(pa_obesity, id.vars = c('fips','Sex','Outcome','State'), measure.vars = c("Prevalence 2001 (%)","Prevalence 2002 (%)","Prevalence 2003 (%)","Prevalence 2004 (%)",
"Prevalence 2005 (%)","Prevalence 2006 (%)","Prevalence 2007 (%)","Prevalence 2008 (%)",
"Prevalence 2009 (%)","Prevalence 2010 (%)","Prevalence 2011 (%)"))
pa_obesity[, c("measure","year","trash") := tstrsplit(variable, " ", fixed=TRUE)]
pa_obesity[, year := as.numeric(year)]
pa_obesity <- dcast(pa_obesity, fips + Sex + year + State ~ Outcome, value.var = 'value')
pa_obesity[Sex=='Male', sex := 1]
pa_obesity[Sex=='Female', sex := 2]
setnames(pa_obesity, c('State','Any PA','Obesity','Sufficient PA'), c('state','pa_prev','obesity_prev','sufficient_pa_prev'))
pa_obesity <- pa_obesity[!is.na(sex), c('state','fips','pa_prev','obesity_prev','sufficient_pa_prev','year','sex')]
## Merge all together using fips/county from diabetes as anchor.
template <- as.data.table(expand.grid(2000:2015, 1:2, unique(diabetes[!is.na(fips), fips])))
setnames(template, c('year','sex','fips'))
template[, fips := as.character(fips)]
template[nchar(fips)==4, fips := paste0('0',fips)]
all <- merge(template, diabetes, by=c('fips','year','sex'), all.x=TRUE)
all <- merge(all, pa_obesity, by=c('fips','year','sex'), all.x=TRUE)
all <- merge(all, alcohol, by=c('state','county','year','sex'), all.x=TRUE)
all <- merge(all, smoking, by=c('state','county','year','sex'), all.x=TRUE)
all[, state := NULL]
all[, county := NULL]
## Merge CHR variables to compare
chr <- fread("C:/Users/ngraetz/Documents/repos/rwjf_counties/covariate_clean_data/chr_covs.csv")
chr[, fips := as.character(fips)]
chr[nchar(fips)==4, fips := paste0('0',fips)]
all <- merge(all, chr, all.x=TRUE, by=c('fips','year'))
## Interpolate forward and backward assuming growth rate is constant.
cols = c('as_diabetes_prev','pa_prev','obesity_prev','as_heavy_drinking_prev','current_smoker_prev',"chr_obesity_prev","chr_mammography","chr_diabetes_monitoring")
anscols = paste("lag", cols, sep="_")
all <- all[order(year)]
all[order(year), (anscols) := data.table::shift(.SD, 1, type="lag"), .SDcols=cols, by=c('fips','sex')]
for(v in cols) all[, paste0('r_',(v)) := log(get(v)/get(paste0('lag_',v)))]
magr <- all[, lapply(.SD, mean, na.rm=TRUE), by=c('fips','sex'), .SDcols=paste0('r_',cols)]
setnames(magr, paste0('r_',cols), paste0('magr_',cols))
all <- merge(all, magr, by=c('fips','sex'))
names(all)
proj_cov <- function(x, magr) {
if(length(x[!(is.na(x))])==0) {
return(as.numeric(rep(NA,16)))
}
if(length(x[!(is.na(x))])!=0) {
temp <- data.table(year=2000:2015, cov=x, magr=magr)
## Get year range of this variable.
min_y <- min(temp[!is.na(cov), year])
max_y <- max(temp[!is.na(cov), year])
## Interpolate backwards.
if(min_y != 2000) {
for(y in rev(2000:(min_y-1))) {
temp[, trend := data.table::shift(cov, type='lead')]
temp[year==y, cov := trend / exp(magr)]
}
}
## Interpolate forwards.
if(max_y != 2015) {
for(y in (max_y+1):2015) {
temp[, trend := data.table::shift(cov, type='lag')]
temp[year==y, cov := trend * exp(magr)]
}
}
## Return just the interpolated covariate trend to assign to the new column.
return(temp[, cov])
}
}
all_melt <- melt(all, id.vars = c('fips','year','sex',c(paste0('magr_',cols))), measure.vars = cols, value.name = 'value')
all_melt <- melt(all_melt, id.vars = c('fips','year','sex','variable','value'), measure.vars = c(paste0('magr_',cols)), value.name = 'magr')
all_melt <- melt(all, id.vars = c('fips','year','sex',c(paste0('magr_',cols))), measure.vars = cols, value.name = 'value')
head(all_melt)
names(all_melt)
all_melt <- melt(all_melt, id.vars = c('fips','year','sex','variable','value'), measure.vars = c(paste0('magr_',cols)), value.name = 'magr')
head(all_melt)
all_melt[, variable.1 := gsub('magr_','',variable.1)]
all_melt <- all_melt[variable==variable.1, ]
all_melt[, variable.1 := NULL]
all_melt[order(year), int_value := proj_cov(value, magr), by=c('fips','sex','variable')]
all_melt[!is.na(int_value) & is.na(value), interpolated := 'int']
all_melt[is.na(interpolated), interpolated := 'raw']
all_melt[variable=='chr_obesity_prev', value := value * 100]
all_melt[variable=='chr_obesity_prev', int_value := int_value * 100]
repo <- 'C:/Users/ngraetz/Documents/repos/rwjf_counties/'
source(paste0(repo, 'functions.R'))
source(paste0(repo, 'functions_shapley.R'))
cov_names <- get_clean_cov_names()
setnames(cov_names,'fe','cov')
t <- fread('C:/Users/ngraetz/Desktop/may22_tables/table1_sd.csv')
#t[, metro_region := paste0(metroname, ' ', regionname)]
setnames(t, 'metro_region_2015', 'metro_region')
t[, V1 := NULL]
t[, total_pop := NULL]
all_vars <- unique(t[, variable])
t <- dcast(t, metro_region ~ variable + year, value.var='value')
for(v in all_vars) t[, (paste0(v, '_change')) := get(paste0(v, '_2015')) - get(paste0(v, '_2000'))]
t <- t[, c('metro_region',grep('_change',names(t),value=T)), with=F]
t <- melt(t, id.vars = c('metro_region'), variable.name = 'cov', value.name = 'change')
t <- t[!(cov %in% c('nmx_change')), ]
t[, cov := gsub('_change', '', cov)]
t <- merge(t, cov_names, by='cov')
t_capped <- copy(t)
t_capped[change >= 1, change := 1]
t_capped[change <= -1, change := -1]
ordered_covs <- unique(t_capped[, c('cov_name','cov_sort')])
ordered_covs <- ordered_covs[order(cov_sort)]
ordered_covs <- ordered_covs[, cov_name]
t_capped[, cov_name := factor(cov_name, levels = ordered_covs)]
t <- fread('C:/Users/ngraetz/Desktop/may22_tables/table1.csv')
#t[, metro_region := paste0(metroname, ' ', regionname)]
setnames(t, 'metro_region_2015', 'metro_region')
t[, V1 := NULL]
t[, total_pop := NULL]
all_vars <- unique(t[, variable])
t[variable=='log_mds_pc', value := round(exp(value),1)]
t <- dcast(t, metro_region ~ variable + year, value.var='value')
for(v in all_vars) t[, (paste0(v, '_change')) := get(paste0(v, '_2015')) - get(paste0(v, '_2000'))]
t <- t[, c('metro_region',grep('_change',names(t),value=T)), with=F]
t <- melt(t, id.vars = c('metro_region'), variable.name = 'cov', value.name = 'change')
t <- t[!(cov %in% c('nmx_change')), ]
t[, cov := gsub('_change', '', cov)]
vars_to_scale <- c('chr_diabetes_monitoring','chr_mammography','perc_black','perc_hispanic','percent_transfers')
for(v in vars_to_scale) t[cov==v, change := change * 100]
t <- merge(t, cov_names, by='cov')
t[, cov_name := factor(cov_name, levels = ordered_covs)]
# Load knitr package and settings
library(knitr)
library(data.table)
library(ggplot2)
library(formatR)
library(kableExtra)
options(scipen=999)
#opts_chunk$set(fig.align='center', tidy=TRUE, tidy.opts=list(blank=TRUE, width.cutoff=40), warning=FALSE,message=FALSE)
#opts_chunk$set(tidy.opts=list(width.cutoff=80),tidy=TRUE)
knit_hooks$set(small.mar = function(before, options, envir) {
if (before)    par(mar=c(1,1,1,1)+.1)  # smaller margin on top and right
})
opts_chunk$set(small.mar=TRUE)
repo <- 'C:/Users/ngraetz/Documents/repos/rwjf_counties/'
source(paste0(repo, 'functions.R'))
source(paste0(repo, 'functions_shapley.R'))
cov_names <- get_clean_cov_names()
setnames(cov_names,'fe','cov')
t <- fread('C:/Users/ngraetz/Desktop/may22_tables/table1_sd.csv')
#t[, metro_region := paste0(metroname, ' ', regionname)]
setnames(t, 'metro_region_2015', 'metro_region')
t[, V1 := NULL]
t[, total_pop := NULL]
all_vars <- unique(t[, variable])
t <- dcast(t, metro_region ~ variable + year, value.var='value')
for(v in all_vars) t[, (paste0(v, '_change')) := get(paste0(v, '_2015')) - get(paste0(v, '_2000'))]
t <- t[, c('metro_region',grep('_change',names(t),value=T)), with=F]
t <- melt(t, id.vars = c('metro_region'), variable.name = 'cov', value.name = 'change')
t <- t[!(cov %in% c('nmx_change')), ]
t[, cov := gsub('_change', '', cov)]
t <- merge(t, cov_names, by='cov')
t_capped <- copy(t)
t_capped[change >= 1, change := 1]
t_capped[change <= -1, change := -1]
ordered_covs <- unique(t_capped[, c('cov_name','cov_sort')])
ordered_covs <- ordered_covs[order(cov_sort)]
ordered_covs <- ordered_covs[, cov_name]
t_capped[, cov_name := factor(cov_name, levels = ordered_covs)]
t <- fread('C:/Users/ngraetz/Desktop/may22_tables/table1.csv')
#t[, metro_region := paste0(metroname, ' ', regionname)]
setnames(t, 'metro_region_2015', 'metro_region')
t[, V1 := NULL]
t[, total_pop := NULL]
all_vars <- unique(t[, variable])
t[variable=='log_mds_pc', value := round(exp(value),1)]
t <- dcast(t, metro_region ~ variable + year, value.var='value')
for(v in all_vars) t[, (paste0(v, '_change')) := get(paste0(v, '_2015')) - get(paste0(v, '_2000'))]
t <- t[, c('metro_region',grep('_change',names(t),value=T)), with=F]
t <- melt(t, id.vars = c('metro_region'), variable.name = 'cov', value.name = 'change')
t <- t[!(cov %in% c('nmx_change')), ]
t[, cov := gsub('_change', '', cov)]
vars_to_scale <- c('chr_diabetes_monitoring','chr_mammography','perc_black','perc_hispanic','percent_transfers')
for(v in vars_to_scale) t[cov==v, change := change * 100]
t <- merge(t, cov_names, by='cov')
t[, cov_name := factor(cov_name, levels = ordered_covs)]
head(t)
head(t_capped)
t[, metro_region := gsub('_',' ',metro_region)]
t
t <- dcast(t, metro_region ~ cov_name, value.var='change'),
t <- dcast(t, metro_region ~ cov_name, value.var='change'),
t <- dcast(t, metro_region ~ cov_name, value.var='change')
t
cause <- 'allcause'
coefs <- fread(paste0('C:/Users/ngraetz/Desktop/may22_tables/', cause, '_25_64_coefficients.csv'), header = T)
coefs[name=='DIC', cov_name := 'DIC']
# coefs <- coefs[!(grep('agegrp', name))]
# coefs <- coefs[!(grep('Intercept', name))]
coefs[, name := NULL]
coefs[, cause := NULL]
setcolorder(coefs, 'cov_name')
coefs[, ('6') := as.character(get('6'))]
# coefs[, ('7') := as.character(get('7'))]
coefs
t
t <- fread('C:/Users/ngraetz/Desktop/may22_tables/table1.csv')
#t[, metro_region := paste0(metroname, ' ', regionname)]
setnames(t, 'metro_region_2015', 'metro_region')
t[, V1 := NULL]
t[, total_pop := NULL]
all_vars <- unique(t[, variable])
t[variable=='log_mds_pc', value := round(exp(value),1)]
t <- dcast(t, metro_region ~ variable + year, value.var='value')
for(v in all_vars) t[, (paste0(v, '_change')) := get(paste0(v, '_2015')) - get(paste0(v, '_2000'))]
t <- t[, c('metro_region',grep('_change',names(t),value=T)), with=F]
t <- melt(t, id.vars = c('metro_region'), variable.name = 'cov', value.name = 'change')
t <- t[!(cov %in% c('nmx_change')), ]
t[, cov := gsub('_change', '', cov)]
vars_to_scale <- c('chr_diabetes_monitoring','chr_mammography','perc_black','perc_hispanic','percent_transfers')
for(v in vars_to_scale) t[cov==v, change := change * 100]
t <- merge(t, cov_names, by='cov')
t[, cov_name := factor(cov_name, levels = ordered_covs)]
t[, metro_region := gsub('_',' ',metro_region)]
t <- dcast(t, metro_region ~ cov_name, value.var='change')
t[, region := gsub('Lg central metro |Lg fringe metro |Md/Sm metro |Nonmetro ','',metro_region)]
t
t[, metro_region := NULL]
setcolorder(t, 'region')
t
names(t)
dc <- fread(paste0("C:/Users/ngraetz/Desktop/march23_tables/",cause,"_25_64_decomp.csv"))
dc[, V1 := NULL]
dc[fe=='residual', cov_name := 'Residual']
dc[fe=='year', cov_name := 'Year']
dc <- dc[, c('metro_region','contribution_mort','cov_name')]
#dc <- merge(dc, cov_names)
#ordered_covs_dc <- c(ordered_covs, 'Year', 'Residual')
ordered_covs_dc <- cov_names[order(cov_sort)]
ordered_covs_dc <- unique(ordered_covs_dc$cov_name)
dc[, cov_name := factor(cov_name, levels = c(ordered_covs_dc,'Year'))]
dc_capped <- copy(dc)
ifelse(cause=='allcause', lim <- 30, lim <- 10)
dc_capped[contribution_mort >= lim, contribution_mort := lim]
dc_capped[contribution_mort <= -lim, contribution_mort := -lim]
dc
dc <- dcast(t, metro_region ~ cov_name, value.var='contribution_mort')
dc <- dcast(dc, metro_region ~ cov_name, value.var='contribution_mort')
dc[, region := gsub('Lg central metro |Lg fringe metro |Md/Sm metro |Nonmetro ','',metro_region)]
dc[, metro_region := NULL]
setcolorder(dc, 'region')
dc
names(dc)
dc <- fread(paste0("C:/Users/ngraetz/Desktop/may22_tables/",cause,"_25_64_decomp.csv"))
dc[, V1 := NULL]
dc[fe=='residual', cov_name := 'Residual']
dc[fe=='year', cov_name := 'Year']
dc <- dc[, c('metro_region','contribution_mort','cov_name')]
#dc <- merge(dc, cov_names)
#ordered_covs_dc <- c(ordered_covs, 'Year', 'Residual')
ordered_covs_dc <- cov_names[order(cov_sort)]
ordered_covs_dc <- unique(ordered_covs_dc$cov_name)
dc[, cov_name := factor(cov_name, levels = c(ordered_covs_dc,'Year'))]
dc_capped <- copy(dc)
ifelse(cause=='allcause', lim <- 30, lim <- 10)
dc_capped[contribution_mort >= lim, contribution_mort := lim]
dc_capped[contribution_mort <= -lim, contribution_mort := -lim]
dc <- dcast(dc, metro_region ~ cov_name, value.var='contribution_mort')
dc[, region := gsub('Lg central metro |Lg fringe metro |Md/Sm metro |Nonmetro ','',metro_region)]
dc[, metro_region := NULL]
setcolorder(dc, 'region')
dc
names(dc)
?scale
.9*0.6
.9*0.8 - .1*0.6
.1*0.6
.9*0.6 - .1*0.8
install.packages('memisc')
install.packages('memisc')
